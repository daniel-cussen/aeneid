I wrote this tool for my father, Antonio Cussen, who was writing /El
milenio según Virgilio/ (published in Santiago in 2018), or /Virgil's
Millennium/, an essay about Virgil's /Aeneid/.  He wanted to
reconstruct the epic poem as it was originally written by the Roman
poet Virgil for Emperor Augustus.  Part of the task was to identify
how the letters were to be counted, because the number of letters in
the poem is meaningful.

Written between 29 and 19 BCE, only two decades after the of the
Julian reform of the calendar by Julius Caesar, who established the
solar year of 365 1/4 days, /the Aeneid/ immortalizes that calendar in
a poem.  There was a short Alexandrian poem of 365 letters, one per
day of the year, which literally says it has a letter for each day of
the year, probably written in the second century BCE.  /The Aeneid/
similarly has a letter per day in a "Great Year."  A Great Year for
Virgil is a millennium of 9 /saecula/ (or centuries) of 110 years
each, totalling 990 years, plus an /ultima aetas/, or "last age," the
remaining 10 years of the millennium, which represent the violent and
cataclysmic end of the cycle.  From that point on a new cycle begins.

Included is an /Aeneid/ as published in Volume II of /El milenio según
Virgilio/.  It is in Latin and its correctness has been approximated
to the highest degree made possible by surviving manuscripts and the
hidden mathematical structure of the poem itself.  Its choices are
defended in /Notas para la reconstrucción de la Eneida/ (/Notes for
the reconstruction of the Aeneid/), Volume III of the three tomes of
Cussen's work.  This includes research into the orthography of Latin
words of the time.  Volume II and III are available for download at
[[https://elmileniosegunvirgilio.home.blog/][Cussen's blog]].

Once a verse has been preprocessed according to these rules about
which letters are not pronounced, the poem's letters can be tallied.
This is what virgil.lisp does.

This cryptographic algorithm was performed in the 1st century BCE by Virgil's
Greek slaves.  Needless to say it is hugely advantageous to do so with
a computer in the 21st century, and with the poem and the code online,
anybody can verify it verse by verse:

* Usage

Load a Common Lisp, e.g. clisp, and run

> clisp script.lisp aeneid.txt

Alternatively, to make a file to compare to elided-aeneid.txt

> clisp script.lisp aeneid.txt > output.txt

With SBCL from SLIME:

> (load "virgil.lisp")

> (process "aeneid.txt")

* Notes

The code annotates the plain /Aeneid/ in several ways.  First, it adds
verse numbers from 1 to 9900, which are even more important in this
poem than they already are in most poetry.  Second, is the cumulative
letter count.  This helped with reconstructing the poem, especially by
finding differences between the output of different versions of /the
Aeneid/.  Finally there's the verse itself, with elided letters in
parentheses.
